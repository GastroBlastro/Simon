<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lightBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>